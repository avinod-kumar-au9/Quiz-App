{"version":3,"sources":["temp1/mainquiz.js","index.js"],"names":["Quiz","answerCopy","idx","questionidx","console","log","state","questions","answerOptions","isCorrect","sessionStorage","setItem","JSON","parse","getItem","setState","questionCnt","restart","randomQues","Math","floor","random","className","this","onClick","questionText","map","ans","answerText","React","Component","App","clickhandler","document","querySelector","classList","toggle","val","innerHTML","Fragment","ReactDOM","render","getElementById"],"mappings":"iQAkGeA,G,wDA7Fb,aAAe,IAAD,8BACZ,gBAWFC,WAAa,SAACC,EAAKC,GAEjBC,QAAQC,WACC,EAAKC,MAAMC,UAAUJ,EAAc,GAAGK,cAAcN,GAAKO,WAElEL,QAAQC,IAAI,YAGV,IADA,EAAKC,MAAMC,UAAUJ,EAAc,GAAGK,cAAcN,GAAKO,WAGzDC,eAAeC,QACb,MACAC,KAAKC,MAAMH,eAAeI,QAAQ,QAAU,GAIhD,EAAKC,SAAL,2BACK,EAAKT,OADV,IAEEU,YAAa,EAAKV,MAAMU,YAAc,MA9B5B,EAkCdC,QAAU,WACR,EAAKF,SAAL,2BACK,EAAKT,OADV,IAGEU,YAAa,KAEfN,eAAeC,QAAQ,MAAO,IAtC9B,EAAKL,MAAQ,CACXC,UAAWA,EACXS,YAAa,GAJH,E,gEASZN,eAAeC,QAAQ,MAAO,K,+BAkCtB,IAAD,OAEHO,EAAaC,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GACjD,OACE,qBAAKC,UAAU,QAAf,SACE,qBAAKA,UAAU,OAAf,SACGC,KAAKjB,MAAMU,YAAc,EACxB,qBAAKM,UAAU,WAAf,SACE,sBAAKA,UAAU,UAAf,UACE,wBAAQA,UAAU,UAAUE,QAASD,KAAKN,QAA1C,qBAGA,oBAAIK,UAAU,WAAd,8BACiBV,KAAKC,MAClBH,eAAeI,QAAQ,QAF3B,oBAQJ,sBAAKQ,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,kDAAiBC,KAAKjB,MAAMU,aAAc,2CAC1C,mBAAGM,UAAU,WAAb,SACGC,KAAKjB,MAAMC,UAAUW,EAAa,GAAGO,kBAG1C,qBAAKH,UAAU,OAAf,SACGC,KAAKjB,MAAMC,UAAUW,EAAa,GAAGV,cAAckB,KAClD,SAACC,EAAKzB,GACJ,OACE,wBAEEoB,UAAU,UACVE,QAAS,kBAAM,EAAKvB,WAAWC,EAAKgB,IAHtC,SAKGS,EAAIC,YAJA1B,mB,GA5EV2B,IAAMC,YCKnBC,E,4MACJC,aAAe,WACbC,SAASC,cAAc,QAAQC,UAAUC,OAAO,UAChDH,SAASC,cAAc,UAAUC,UAAUC,OAAO,cAClD,IAAIC,EAAMJ,SAASC,cAAc,QAAQZ,UAGzCW,SAASC,cAAc,UAAUI,UADtB,UAAPD,EACuC,YAEE,Y,uDAO7C,OACE,eAAC,IAAME,SAAP,WACE,wBAAQjB,UAAU,WAAWE,QAASD,KAAKS,aAA3C,sBAIA,cAAC,EAAD,W,GAtBUH,IAAMC,WA4BxBU,IAASC,OAAO,cAAC,EAAD,IAASR,SAASS,eAAe,U","file":"static/js/main.d126dcf4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport questions from \"./db.json\";\r\nimport \"./quiz.css\";\r\nclass Quiz extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questions: questions,\r\n      questionCnt: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    sessionStorage.setItem(\"cnt\", 0);\r\n  }\r\n\r\n  answerCopy = (idx, questionidx) => {\r\n    // console.log(idx,questionidx);\r\n    console.log(\r\n      typeof this.state.questions[questionidx - 1].answerOptions[idx].isCorrect\r\n    );\r\n    console.log(typeof true);\r\n    if (\r\n      this.state.questions[questionidx - 1].answerOptions[idx].isCorrect ===\r\n      true\r\n    ) {\r\n      sessionStorage.setItem(\r\n        \"cnt\",\r\n        JSON.parse(sessionStorage.getItem(\"cnt\")) + 1\r\n      );\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      questionCnt: this.state.questionCnt + 1,\r\n    });\r\n  };\r\n\r\n  restart = () => {\r\n    this.setState({\r\n      ...this.state,\r\n\r\n      questionCnt: 1,\r\n    });\r\n    sessionStorage.setItem(\"cnt\", 0);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state.correctAnsCnt);\r\n    var randomQues = Math.floor(Math.random() * 10 + 1);\r\n    return (\r\n      <div className=\"row1 \">\r\n        <div className=\"col1\">\r\n          {this.state.questionCnt > 4 ? (\r\n            <div className=\"rowlast \">\r\n              <div className=\"collast\">\r\n                <button className=\"restart\" onClick={this.restart}>\r\n                  Restart\r\n                </button>\r\n                <h3 className=\"scoreend\">\r\n                  {`You scored ${JSON.parse(\r\n                    sessionStorage.getItem(\"cnt\")\r\n                  )} out of 4`}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"row2\">\r\n              <div className=\"col2 quescol\">\r\n                <h2>{`Question ${this.state.questionCnt}`}<span> / 4</span></h2>\r\n                <p className=\"question\">\r\n                  {this.state.questions[randomQues - 1].questionText}\r\n                </p>\r\n              </div>\r\n              <div className=\"col2\">\r\n                {this.state.questions[randomQues - 1].answerOptions.map(\r\n                  (ans, idx) => {\r\n                    return (\r\n                      <button\r\n                        key={idx}\r\n                        className=\"buttons\"\r\n                        onClick={() => this.answerCopy(idx, randomQues)}\r\n                      >\r\n                        {ans.answerText}\r\n                      </button>\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import Routing from \"./temp/compo/routing\";\r\n// import { Provider } from \"react-redux\";\r\n// import store from \"./temp/store/store\";\r\nimport \"./index.css\";\r\nimport Apps from \"./temp1/mainquiz\"\r\n\r\n\r\nclass App extends React.Component {\r\n  clickhandler = () => {\r\n    document.querySelector(\"body\").classList.toggle(\"change\");\r\n    document.querySelector(\"button\").classList.toggle(\"buttchange\");\r\n    let val = document.querySelector(\"body\").className;\r\n    \r\n    if (val == \"change\")\r\n    document.querySelector(\"button\").innerHTML=\"whiteMode\"\r\n    else{\r\n      document.querySelector(\"button\").innerHTML=\"DarkMode\"\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button className=\"darkbutt\" onClick={this.clickhandler}>\r\n        DarkMode\r\n        </button>\r\n\r\n        <Apps/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}